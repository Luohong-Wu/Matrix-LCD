
#include "avr/pgmspace.h"
#include "Arduino.h"

#define Min_Score 0
#define Max_Score 5.0 // The max value is 9.9, because the 8*8 matrix can only display 2 numbers 

//How many times a loop will run. such as for(int i=0; i<Time__Delay; i++)
//In order to avoid the matrix flash too fast, we need to use a time-delay.
#define Time_Delay 1000

#define Number_of_Rows 8
#define Number_of_Cols 8
#define Number_of_LEDs 64   //We use a 8*8 matrix, so the constant is 64

#define Boundary_of_Very_Good 0.8  // If the score if bigger than 0.8*Max_Score, the assess is "Very Good";
#define Boundary_of_Good 0.6          //  0.6*Max_Score<=Score<0.8*Max_Score, "Good"
#define Boundary_of_Normal 0.4      //   0.4*Max_Score<=Score<0.6*Max_Score, "Normal"
#define Boundary_of_Bad 0.2           //   0.2*Max_Score<=Score<0.4*Max_Score, "Bad"
#define Boundary_of_Really_Bad 0.0 //   0.0*Max_Score<=Score<0.2*Max_Score, "Really Bad"

#define Speed_of_Move 25  // How fast the alphabets move.  0<Speed_of_Move<=80, the bigger, the faster.

#define Level1 " REALLY BAD"
#define Level2 " BAD"
#define Level3 " NORMAL"
#define Level4 " GOOD"
#define Level5 " VERY GOODs"

class MATRIX {
public:
	MATRIX(int ser_row, int clk_row, int ser_col, int clk_col, int latch) :SER_ROW(ser_row), CLK_ROW(clk_row),
		SER_COL(ser_col), CLK_COL(clk_col), LATCH(latch) {
		pinMode(SER_ROW, OUTPUT);
		pinMode(CLK_ROW, OUTPUT);
		pinMode(SER_COL, OUTPUT);
		pinMode(CLK_COL, OUTPUT);
		pinMode(LATCH, OUTPUT);
	};
	void setStack(int number);
	void setDouble(double number);
	void setInteger(int number);
	void lightFirstNumber(const char Number[5][3]);
	void lightSecondNumber(const char Number[5][3]);
	void setLevel(double level, int speed);
	void setText(String text, int speed);
	int getIndex(char alphabet);
	void testMethod1();
	void testMethod2();
	void testMethod3();

	
private:
	int SER_ROW, CLK_ROW, SER_COL, CLK_COL, LATCH;
};


const char Number[10][5][3] PROGMEM =
{
	{
		1, 1, 1,
		1, 0, 1,
		1, 0, 1,
		1, 0, 1,
		1, 1, 1
	},  //Number0

	{
		0, 0, 1,
		0, 0, 1,
		0, 0, 1,
		0, 0, 1,
		0, 0, 1
	},  //Number1

	{
		1, 1, 1,
		0, 0, 1,
		1, 1, 1,
		1, 0, 0,
		1, 1, 1
	},  //Number2

	{
		1, 1, 1,
		0, 0, 1,
		1, 1, 1,
		0, 0, 1,
		1, 1, 1
	},   //Number3

	{
		1, 0, 1,
		1, 0, 1,
		1, 1, 1,
		0, 0, 1,
		0, 0, 1
	},   //Number4

	{
		1, 1, 1,
		1, 0, 0,
		1, 1, 1,
		0, 0, 1,
		1, 1, 1
	},   //Number5

	{
		1, 1, 1,
		1, 0, 0,
		1, 1, 1,
		1, 0, 1,
		1, 1, 1
	},    //Number6

	{
		1, 1, 1,
		0, 0, 1,
		0, 0, 1,
		0, 0, 1,
		0, 0, 1
	},    //Number7

	{
		1, 1, 1,
		1, 0, 1,
		1, 1, 1,
		1, 0, 1,
		1, 1, 1
	},    //Number8

	{
		1, 1, 1,
		1, 0, 1,
		1, 1, 1,
		0, 0, 1,
		1, 1, 1
	},    //Number9

};


struct Alphabet_node
{
	char alphabet;
	char matrix[8][8];
};

const Alphabet_node Alphabet_table[27] PROGMEM =
{
	'A',
	{
		0, 0, 0, 1, 1, 0, 0, 0,
		0, 0, 1, 0, 0, 1, 0, 0,
		0, 0, 1, 0, 0, 1, 0, 0,
		0, 0, 1, 0, 0, 1, 0, 0,
		0, 1, 1, 1, 1, 1, 1, 0,
		0, 1, 0, 0, 0, 0, 1, 0,
		0, 1, 0, 0, 0, 0, 1, 0,
		0, 1, 0, 0, 0, 0, 1, 0,
	},

	'B',
	{
		0, 1, 1, 1, 1, 0, 0, 0,
		0, 1, 0, 0, 0, 1, 0, 0,
		0, 1, 0, 0, 0, 1, 0, 0,
		0, 1, 0, 0, 1, 0, 0, 0,
		0, 1, 1, 1, 1, 1, 0, 0,
		0, 1, 0, 0, 0, 0, 1, 0,
		0, 1, 0, 0, 0, 0, 1, 0,
		0, 1, 1, 1, 1, 1, 0, 0,
	},

	'C',
	{
		0, 0, 0, 1, 1, 0, 0, 0,
		0, 0, 1, 0, 0, 1, 0, 0,
		0, 1, 1, 0, 0, 0, 1, 0,
		0, 1, 0, 0, 0, 0, 0, 0,
		0, 1, 0, 0, 0, 0, 0, 0,
		0, 1, 1, 0, 0, 0, 1, 0,
		0, 0, 1, 0, 0, 1, 0, 0,
		0, 0, 0, 1, 1, 0, 0, 0,
	},

	'D',
	{
		0, 1, 1, 1, 1, 0, 0, 0,
		0, 1, 0, 0, 0, 1, 0, 0,
		0, 1, 0, 0, 0, 0, 1, 0,
		0, 1, 0, 0, 0, 0, 1, 0,
		0, 1, 0, 0, 0, 0, 1, 0,
		0, 1, 0, 0, 0, 0, 1, 0,
		0, 1, 0, 0, 0, 1, 0, 0,
		0, 1, 1, 1, 1, 0, 0, 0,
	},

	'E',
	{
		0, 1, 1, 1, 1, 1, 1, 0,
		0, 1, 0, 0, 0, 0, 0, 0,
		0, 1, 0, 0, 0, 0, 0, 0,
		0, 1, 1, 1, 1, 1, 0, 0,
		0, 1, 1, 1, 1, 1, 0, 0,
		0, 1, 0, 0, 0, 0, 0, 0,
		0, 1, 0, 0, 0, 0, 0, 0,
		0, 1, 1, 1, 1, 1, 1, 0,
	},

	'F',
	{
		0, 1, 1, 1, 1, 1, 1, 0,
		0, 1, 0, 0, 0, 0, 0, 0,
		0, 1, 0, 0, 0, 0, 0, 0,
		0, 1, 1, 1, 1, 1, 0, 0,
		0, 1, 0, 0, 0, 0, 0, 0,
		0, 1, 0, 0, 0, 0, 0, 0,
		0, 1, 0, 0, 0, 0, 0, 0,
		0, 1, 0, 0, 0, 0, 0, 0,
	},

	'G',
	{
		0, 0, 0, 1, 1, 0, 0, 0,
		0, 0, 1, 0, 0, 1, 0, 0,
		0, 1, 0, 0, 0, 0, 1, 0,
		0, 1, 0, 0, 0, 0, 0, 0,
		0, 1, 0, 0, 0, 1, 1, 0,
		0, 1, 0, 0, 0, 0, 1, 0,
		0, 0, 1, 0, 0, 1, 0, 0,
		0, 0, 0, 1, 1, 0, 0, 0,
	},


	'H',
	{
		0, 1, 1, 0, 0, 1, 1, 0,
		0, 1, 1, 0, 0, 1, 1, 0,
		0, 1, 1, 0, 0, 1, 1, 0,
		0, 1, 1, 1, 1, 1, 1, 0,
		0, 1, 1, 1, 1, 1, 1, 0,
		0, 1, 1, 0, 0, 1, 1, 0,
		0, 1, 1, 0, 0, 1, 1, 0,
		0, 1, 1, 0, 0, 1, 1, 0,
	},

	'I',
	{
		0, 0, 1, 1, 1, 1, 0, 0,
		0, 0, 0, 1, 1, 0, 0, 0,
		0, 0, 0, 1, 1, 0, 0, 0,
		0, 0, 0, 1, 1, 0, 0, 0,
		0, 0, 0, 1, 1, 0, 0, 0,
		0, 0, 0, 1, 1, 0, 0, 0,
		0, 0, 0, 1, 1, 0, 0, 0,
		0, 0, 1, 1, 1, 1, 0, 0,
	},

	'J',
	{
		0, 0, 1, 1, 1, 1, 0, 0,
		0, 0, 0, 1, 1, 0, 0, 0,
		0, 0, 0, 1, 1, 0, 0, 0,
		0, 0, 0, 1, 1, 0, 0, 0,
		0, 0, 0, 1, 1, 0, 0, 0,
		0, 0, 0, 1, 1, 0, 0, 0,
		1, 1, 0, 1, 1, 0, 0, 0,
		0, 1, 1, 1, 0, 0, 0, 0,
	},
	'K',
	{
		0, 1, 1, 0, 0, 0, 1, 0,
		0, 1, 1, 0, 0, 1, 0, 0,
		0, 1, 1, 0, 1, 0, 0, 0,
		0, 1, 1, 1, 0, 0, 0, 0,
		0, 1, 1, 1, 0, 0, 0, 0,
		0, 1, 1, 0, 1, 0, 0, 0,
		0, 1, 1, 0, 0, 1, 0, 0,
		0, 1, 1, 0, 0, 0, 1, 0,
	},



	'L',
	{
		0, 1, 1, 0, 0, 0, 0, 0,
		0, 1, 1, 0, 0, 0, 0, 0,
		0, 1, 1, 0, 0, 0, 0, 0,
		0, 1, 1, 0, 0, 0, 0, 0,
		0, 1, 1, 0, 0, 0, 0, 0,
		0, 1, 1, 0, 0, 0, 0, 0,
		0, 1, 1, 1, 1, 1, 1, 0,
		0, 1, 1, 1, 1, 1, 1, 0,
	},

	'M',
	{
		0, 1, 0, 0, 0, 0, 1, 0,
		1, 0, 1, 0, 0, 1, 0, 1,
		1, 0, 1, 0, 0, 1, 0, 1,
		1, 0, 1, 0, 0, 1, 0, 1,
		1, 0, 0, 1, 1, 0, 0, 1,
		1, 0, 0, 1, 1, 0, 0, 1,
		1, 0, 0, 1, 1, 0, 0, 1,
		1, 0, 0, 0, 0, 0, 0, 1,
	},

	'N',
	{
		0, 1, 0, 0, 0, 0, 1, 0,
		0, 1, 1, 0, 0, 0, 1, 0,
		0, 1, 0, 1, 0, 0, 1, 0,
		0, 1, 0, 1, 0, 0, 1, 0,
		0, 1, 0, 0, 1, 0, 1, 0,
		0, 1, 0, 0, 1, 0, 1, 0,
		0, 1, 0, 0, 0, 1, 1, 0,
		0, 1, 0, 0, 0, 0, 1, 0,
	},

	'O',
	{
		0, 0, 0, 1, 1, 0, 0, 0,
		0, 0, 1, 0, 0, 1, 0, 0,
		0, 1, 1, 0, 0, 1, 1, 0,
		0, 1, 0, 0, 0, 0, 1, 0,
		0, 1, 0, 0, 0, 0, 1, 0,
		0, 1, 1, 0, 0, 1, 1, 0,
		0, 0, 1, 0, 0, 1, 0, 0,
		0, 0, 0, 1, 1, 0, 0, 0,
	},

	'P',
	{
		0, 0, 0, 1, 1, 0, 0, 0,
		0, 0, 1, 0, 0, 1, 0, 0,
		0, 1, 1, 0, 0, 1, 1, 0,
		0, 1, 0, 0, 0, 0, 1, 0,
		0, 1, 0, 0, 0, 0, 1, 0,
		0, 1, 1, 0, 0, 1, 1, 0,
		0, 0, 1, 0, 0, 1, 0, 0,
		0, 0, 0, 1, 1, 0, 0, 0,
	},

	'Q',
	{
		0, 0, 0, 1, 1, 0, 0, 0,
		0, 0, 1, 0, 0, 1, 0, 0,
		0, 1, 0, 0, 0, 0, 1, 0,
		0, 1, 0, 0, 0, 0, 1, 0,
		0, 1, 0, 0, 0, 0, 1, 0,
		0, 1, 0, 0, 1, 0, 1, 0,
		0, 0, 1, 0, 0, 1, 0, 0,
		0, 0, 0, 1, 1, 0, 1, 0,
	},

	'R',
	{
		0, 1, 1, 1, 1, 0, 0, 0,
		0, 1, 1, 0, 0, 1, 0, 0,
		0, 1, 1, 0, 0, 0, 1, 0,
		0, 1, 1, 0, 0, 1, 0, 0,
		0, 1, 1, 1, 1, 0, 0, 0,
		0, 1, 1, 0, 1, 0, 0, 0,
		0, 1, 1, 0, 0, 1, 0, 0,
		0, 1, 1, 0, 0, 0, 1, 0,
	},

	'S',
	{
		0, 0, 0, 1, 1, 0, 0, 0,
		0, 0, 1, 0, 0, 1, 0, 0,
		0, 0, 1, 0, 0, 0, 0, 0,
		0, 0, 0, 1, 1, 0, 0, 0,
		0, 0, 0, 0, 0, 1, 0, 0,
		0, 1, 0, 0, 0, 0, 1, 0,
		0, 0, 1, 0, 0, 1, 0, 0,
		0, 0, 0, 1, 1, 0, 0, 0,
	},

	'T',
	{
		0, 1, 1, 1, 1, 1, 1, 0,
		0, 1, 1, 1, 1, 1, 1, 0,
		0, 0, 0, 1, 1, 0, 0, 0,
		0, 0, 0, 1, 1, 0, 0, 0,
		0, 0, 0, 1, 1, 0, 0, 0,
		0, 0, 0, 1, 1, 0, 0, 0,
		0, 0, 0, 1, 1, 0, 0, 0,
		0, 0, 0, 1, 1, 0, 0, 0,
	},

	'U',
	{
		0, 1, 1, 0, 0, 1, 1, 0,
		0, 1, 1, 0, 0, 1, 1, 0,
		0, 1, 1, 0, 0, 1, 1, 0,
		0, 1, 1, 0, 0, 1, 1, 0,
		0, 1, 1, 0, 0, 1, 1, 0,
		0, 1, 1, 0, 0, 1, 1, 0,
		0, 1, 1, 0, 0, 1, 1, 0,
		0, 0, 1, 1, 1, 1, 0, 0,
	},


	'V',
	{
		1, 1, 0, 0, 0, 0, 1, 1,
		1, 1, 0, 0, 0, 0, 1, 1,
		0, 1, 1, 0, 0, 1, 1, 0,
		0, 1, 1, 0, 0, 1, 1, 0,
		0, 0, 1, 0, 0, 1, 0, 0,
		0, 0, 1, 0, 0, 1, 0, 0,
		0, 0, 0, 1, 1, 0, 0, 0,
		0, 0, 0, 1, 1, 0, 0, 0,
	},

	'W',
	{
		1, 0, 0, 0, 0, 0, 0, 1,
		1, 0, 0, 1, 1, 0, 0, 1,
		1, 0, 0, 1, 1, 0, 0, 1,
		1, 0, 0, 1, 1, 0, 0, 1,
		1, 0, 1, 0, 0, 1, 0, 1,
		1, 0, 1, 0, 0, 1, 0, 1,
		1, 0, 1, 0, 0, 1, 0, 1,
		0, 1, 0, 0, 0, 0, 1, 0,
	},

	'X',
	{
		1, 0, 0, 0, 0, 0, 0, 1,
		0, 1, 0, 0, 0, 0, 1, 0,
		0, 0, 1, 0, 0, 1, 0, 0,
		0, 0, 0, 1, 1, 0, 0, 0,
		0, 0, 0, 1, 1, 0, 0, 0,
		0, 0, 1, 0, 0, 1, 0, 0,
		0, 1, 0, 0, 0, 0, 1, 0,
		1, 0, 0, 0, 0, 0, 0, 1,
	},


	'Y',
	{
		0, 1, 1, 0, 0, 1, 1, 0,
		0, 1, 1, 0, 0, 1, 1, 0,
		0, 1, 1, 0, 0, 1, 1, 0,
		0, 0, 1, 0, 0, 1, 0, 0,
		0, 0, 0, 1, 1, 0, 0, 0,
		0, 0, 0, 1, 1, 0, 0, 0,
		0, 0, 0, 1, 1, 0, 0, 0,
		0, 0, 0, 1, 1, 0, 0, 0,
	},

	'Z',
	{
		0, 1, 1, 1, 1, 1, 1, 1,
		0, 1, 1, 1, 1, 1, 1, 1,
		0, 0, 0, 0, 0, 1, 1, 0,
		0, 0, 0, 0, 1, 1, 0, 0,
		0, 0, 0, 1, 1, 0, 0, 0,
		0, 0, 1, 1, 0, 0, 0, 0,
		0, 1, 1, 1, 1, 1, 1, 1,
		0, 1, 1, 1, 1, 1, 1, 1,
	},

	' ',
	{
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
	},


};
